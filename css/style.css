html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  background-color: #737373;
  padding: 0;
  font-size: 18px;
  line-height: 1.15;
}

.overview {
  background-position: center; /* Parallax effect */
  background-size: cover; /* Parallax effect */
  background-repeat: no-repeat; /* Parallax effect */
  background-attachment: fixed; /* Parallax effect */
  height: 400px; /* Parallax effect */
  color: white;
}

.overview p {
  padding: 0 100px;
  color: white;
  font-size: 24px;
  text-align: center;
}

h1 {
  padding: 50px 0;
  font-size: 50px;
  line-height: 1;
  text-align: center;
}

h2 {
  font-size: 32px;
  line-height: 1.5;
}

nav li {
  display: inline;
  padding-right: 20px;
}

nav a {
  color: black;
  font-weight: bold;
  text-decoration: none;
}

.skip a {
  left: 0;
  z-index: 1;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  background: white;
  padding: 6px;
}

nav {
  background-color: #ddd;
  padding: 25px 0;
  text-align: left;
}

footer {
  background-color: black;
  padding-top: 30px;
  color: white;
  text-align: center;
}

.text-block {
  border: 10px solid black;
  background-color: rgba(255, 255, 255, 0.8);
  padding: 30px;
}

@media screen and (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto; /* Removes scroll animation */
  }

  .skip a {
    -webkit-transition: none; /* sets to default setting */
    transition: none; /* sets to default setting */
  }

  /*Turn off parallax*/
  header {
    background-attachment: initial;
  }
}

/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav a:hover,
nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip a {
  position: absolute;
  top: -40px;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip a:focus {
  top: 20px;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/
*:focus {
  border: solid 2px;
  /* outline makes for sense but since the directions ask for border */
  /*outline: solid 2px;*/
}

/* Step 4: Write selector/rule property to style the container */
.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  gap: 15px;
}

.container img {
  width: 100%;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid and place it in the grid. */
.container div:first-child {
  grid-column: 1 / -1;
  background-image: url("../images/header.jpg");
  min-height: 500px;
}

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next four rows in the grid. */

/*This will be a lot of rules.... but be strategic and combine seletors*/
.about {
  grid-area: 2 / 2 / 2 / 2;
}

.method {
  grid-area: 3 / 2 / 3 / 2;
}

.clients {
  grid-area: 4 / 2 / 4 / 2;
}

.contact {
  grid-area: 5 / 2 / 5 / 2;
}

.about-image,
.method-image,
.clients-image,
.contact-image {
  grid-column: 1 / -1;
  max-height: 600px;
  overflow: hidden;
}

.about-image {
  grid-row: 2;
}

.method-image {
  grid-row: 3;
}

.clients-image {
  grid-row: 4;
}

.contact-image {
  grid-row: 5;
}

/* Step 8: Write the selector/rule property to style the .text-block class. */
.text-block {
  margin: auto;
  max-height: 250px;
  overflow: scroll;
  text-align: center;
}

/* Add your media query here */
@media screen and (min-width: 800px) {
  /* Step 9: Write the selector/rule property to style the nav element */
  nav {
    padding: 30px 0;
    text-align: right;
  }

  /* Step 10: Write the selector/rule property to update the .container class */
  .container {
    display: grid;
    grid-template-columns: 50px auto 500px auto 50px;
  }

  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/
  .about,
  .clients,
  .method-image,
  .contact-image {
    grid-column: 3 / 5;
  }

  .method,
  .contact,
  .about-image,
  .clients-image {
    grid-column: 2 / 4;
  }
}
